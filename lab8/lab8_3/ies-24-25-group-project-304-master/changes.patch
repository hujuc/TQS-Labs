diff --git a/projHomeMaid/backend/src/main/java/pt/ua/deti/ies/backend/controller/UserController.java b/projHomeMaid/backend/src/main/java/pt/ua/deti/ies/backend/controller/UserController.java
index 367b133a..6102e832 100644
--- a/projHomeMaid/backend/src/main/java/pt/ua/deti/ies/backend/controller/UserController.java
+++ b/projHomeMaid/backend/src/main/java/pt/ua/deti/ies/backend/controller/UserController.java
@@ -53,17 +53,4 @@ public class UserController {
             return ResponseEntity.status(500).body("Internal server error.");
         }
     }
-
-    @DeleteMapping("/{houseId}")
-    public ResponseEntity<?> deleteUserByHouseId(@PathVariable String houseId) {
-        try {
-            userService.deleteUserByHouseId(houseId);
-            return ResponseEntity.ok("User successfully deleted.");
-        } catch (IllegalArgumentException e) {
-            return ResponseEntity.badRequest().body(e.getMessage());
-        } catch (Exception e) {
-            return ResponseEntity.status(500).body("Internal server error.");
-        }
-    }
-
 }
\ No newline at end of file
diff --git a/projHomeMaid/backend/src/main/java/pt/ua/deti/ies/backend/service/UserService.java b/projHomeMaid/backend/src/main/java/pt/ua/deti/ies/backend/service/UserService.java
index 45320038..1534f5a5 100644
--- a/projHomeMaid/backend/src/main/java/pt/ua/deti/ies/backend/service/UserService.java
+++ b/projHomeMaid/backend/src/main/java/pt/ua/deti/ies/backend/service/UserService.java
@@ -68,15 +68,4 @@ public class UserService {
                 .signWith(SignatureAlgorithm.HS256, SECRET_KEY)
                 .compact();
     }
-
-    public void deleteUserByHouseId(String houseId) {
-        Optional<User> userOpt = userRepository.findByHouseId(houseId);
-
-        if (userOpt.isEmpty()) {
-            throw new IllegalArgumentException("User with the given houseId does not exist.");
-        }
-
-        userRepository.delete(userOpt.get());
-    }
-
 }
\ No newline at end of file
diff --git a/projHomeMaid/frontend/src/App.jsx b/projHomeMaid/frontend/src/App.jsx
index e622f606..5627d536 100644
--- a/projHomeMaid/frontend/src/App.jsx
+++ b/projHomeMaid/frontend/src/App.jsx
@@ -2,16 +2,12 @@ import { Routes, Route } from 'react-router-dom';
 import Welcome from "./pages/Welcome.jsx";
 import Login from "./pages/Login.jsx";
 import SignUp from "./pages/SignUp.jsx";
-import HomePage from "./pages/HomePage.jsx";
 
 function App() {
   return (
     <>
       <Routes>
-          <Route path="/" element={<SignUp />} />
-
-          {/* Rota para Login */}
-          <Route path="/login" element={<Login />} />
+        <Route path="/" element={<SignUp />} />
       </Routes>
     </>
   )
diff --git a/projHomeMaid/frontend/src/components/SignUpPage/SignUpForm.jsx b/projHomeMaid/frontend/src/components/SignUpPage/SignUpForm.jsx
index 333f4e7c..9c1ab58e 100644
--- a/projHomeMaid/frontend/src/components/SignUpPage/SignUpForm.jsx
+++ b/projHomeMaid/frontend/src/components/SignUpPage/SignUpForm.jsx
@@ -1,6 +1,5 @@
 import React, { useState } from "react";
 import axios from "axios";
-import { useNavigate } from "react-router-dom"; // Importar useNavigate
 
 function SignUpForm() {
     const [formData, setFormData] = useState({
@@ -12,7 +11,6 @@ function SignUpForm() {
     });
     const [showPassword, setShowPassword] = useState(false);
     const [profilePic, setProfilePic] = useState(null);
-    const navigate = useNavigate(); // Inicializar useNavigate
 
     const handleChange = (e) => {
         const { name, value } = e.target;
@@ -32,7 +30,7 @@ function SignUpForm() {
     const handleSubmit = async (e) => {
         e.preventDefault();
         try {
-            const response = await axios.post(import.meta.env.VITE_API_URL + "/users/signUp", {
+            const response = await axios.post(import.meta.env.VITE_API_URL+"/users/signUp", {
                 houseId: formData.contractCode,
                 name: formData.name,
                 email: formData.email,
@@ -41,9 +39,19 @@ function SignUpForm() {
             });
 
             console.log("User created:", response.data);
-            navigate("/login"); // Redirecionar para a p√°gina de login
+
+            // Optional: Automatically log in the user after signup
+            const loginResponse = await axios.post(import.meta.env.VITE_API_URL+"/users/login", {
+                email: formData.email,
+                password: formData.password,
+            });
+
+            // Store JWT in localStorage
+            localStorage.setItem("accessToken", loginResponse.data.accessToken);
+            alert("Signed up and logged in successfully!");
         } catch (error) {
             console.error("Error signing up:", error);
+            alert("Sign-up failed. Please try again.");
         }
     };
 
@@ -138,4 +146,4 @@ function SignUpForm() {
     );
 }
 
-export default SignUpForm;
+export default SignUpForm;
\ No newline at end of file
